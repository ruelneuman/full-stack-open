{"version":3,"sources":["services/persons.js","components/Form.js","components/Search.js","components/Notification.js","components/Person.js","components/PersonList.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","object","delete","id","put","Form","persons","setPersons","displayNotification","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","newPerson","name","number","some","person","message","window","confirm","personsService","returnedPerson","map","catch","error","console","request","config","updateExistingPerson","find","concat","addPerson","value","onChange","target","type","Search","query","handleQuery","Notification","notification","className","Person","handleDelete","onClick","PersonList","filteredPersons","App","setQuery","setNotification","useEffect","initialPersons","setTimeout","filter","modifiedQuery","toLowerCase","trim","includes","byQuery","personToDelete","status","warn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41b0bf33.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then((response) => response.data);\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then((response) => response.data);\r\n}\r\n\r\nconst remove = (object) => {\r\n    const request = axios.delete(`${baseUrl}/${object.id}`, object);\r\n    return request;\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then((response) => response.data);\r\n}\r\n\r\nexport default { getAll, create, remove, update };","import React, { useState } from 'react';\r\nimport personsService from '../services/persons';\r\n\r\nconst Form = ({ persons, setPersons, displayNotification }) => {\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n\r\n    // update existing person that has corresponding id with data from newPerson\r\n    const updateExistingPerson = (id, newPerson) => {\r\n        const message = `${newPerson.name} is already added to the phonebook.\\nOverwrite the old number with a new one?`;\r\n\r\n        // exit handleSubmit if user doesn't want to overwrite number\r\n        if (!window.confirm(message)) return;\r\n\r\n        personsService\r\n            .update(id, newPerson)\r\n            .then((returnedPerson) => {\r\n                setPersons(persons.map((person) => person.id !== id ? person : returnedPerson));\r\n                setNewName('');\r\n                setNewNumber('');\r\n                displayNotification(`Changed ${returnedPerson.name}'s number to ${returnedPerson.number}`, 'success');\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.error(error.response);\r\n                    displayNotification(error.response.data.error, 'failure');\r\n                } else if (error.request) {\r\n                    console.error(error.request);\r\n                } else {\r\n                    console.error('Error', error.message);\r\n                }\r\n                console.error(error.config);\r\n            });\r\n    }\r\n\r\n    const addPerson = (newPerson) => {\r\n        personsService\r\n            .create(newPerson)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson));\r\n                setNewName('');\r\n                setNewNumber('');\r\n                displayNotification(`Added ${returnedPerson.name}`, 'success');\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.error(error.response);\r\n                    displayNotification(error.response.data.error, 'failure');\r\n                } else if (error.request) {\r\n                    console.error(error.request);\r\n                } else {\r\n                    console.error('Error', error.message);\r\n                }\r\n                console.error(error.config);\r\n            });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newPerson = { name: newName, number: newNumber };\r\n\r\n        if (persons.some((person) => person.name === newName)) {\r\n            const personToUpdate = persons.find((person) => person.name === newPerson.name);\r\n            const id = personToUpdate.id;\r\n            updateExistingPerson(id, newPerson);\r\n        } else {\r\n            addPerson(newPerson);\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Add Person</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    name:\r\n                    <input\r\n                        value={newName}\r\n                        onChange={handleNameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    number:\r\n                    <input\r\n                        value={newNumber}\r\n                        onChange={handleNumberChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Search = ({ query, handleQuery }) => {\r\n    return (\r\n        <div>\r\n            <h2>Search</h2>\r\n            search:\r\n            <input\r\n                value={query}\r\n                onChange={handleQuery}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport '../index.css';\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n        return null\r\n    }\r\n\r\n    const className = `notification notification__${notification.type}`\r\n\r\n    return (\r\n        <div className={className}>{notification.message}</div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n\r\n    return (\r\n        <div key={person.name}>\r\n            {person.name} {person.number}\r\n            <button onClick={() => handleDelete(person)}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\nimport Person from './Person'\r\n\r\nconst PersonList = ({ filteredPersons, handleDelete }) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            {filteredPersons.map(person =>\r\n                <Person\r\n                    key={person.id}\r\n                    person={person}\r\n                    handleDelete={handleDelete}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonList;","import React, { useState, useEffect } from 'react';\r\nimport Form from './components/Form';\r\nimport Search from './components/Search';\r\nimport Notification from './components/Notification';\r\nimport PersonList from './components/PersonList';\r\nimport personsService from './services/persons';\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [notification, setNotification] = useState(null);\r\n\r\n    useEffect(() => {\r\n        personsService\r\n            .getAll()\r\n            .then((initialPersons) => {\r\n                setPersons(initialPersons);\r\n            })\r\n    }, []);\r\n\r\n    const displayNotification = (message, type = 'success') => {\r\n        setNotification({ message, type });\r\n        setTimeout(() => {\r\n            setNotification(null);\r\n        }, 3000);\r\n    }\r\n\r\n    const handleQuery = (event) => {\r\n        setQuery(event.target.value);\r\n    }\r\n\r\n    const handleDelete = (personToDelete) => {\r\n        // exit handleDelete if user selects cancel\r\n        if (!window.confirm(`Delete ${personToDelete.name}?`)) return;\r\n\r\n        personsService\r\n            .remove(personToDelete)\r\n            .then(() => {\r\n                setPersons(persons.filter(person => person.id !== personToDelete.id));\r\n                displayNotification(`Removed ${personToDelete.name}`, 'success');\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    if (error.response.status === 404) {\r\n                        setPersons(persons.filter(person => person.id !== personToDelete.id));\r\n                        console.warn(`${personToDelete.name} was already removed from the server`);\r\n                        displayNotification(`${personToDelete.name} was already removed from the server`, 'failure');\r\n                    }\r\n                    console.error(error.response);\r\n                } else if (error.request) {\r\n                    console.error(error.request);\r\n                } else {\r\n                    console.error('Error', error.message);\r\n                }\r\n                console.error(error.config);\r\n            });\r\n    }\r\n\r\n    const byQuery = (query) => (person) => {\r\n        const modifiedQuery = query.toLowerCase().trim();\r\n        return person.name.toLowerCase().includes(modifiedQuery);\r\n    }\r\n\r\n    const filteredPersons = persons.filter(byQuery(query));\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification notification={notification} />\r\n            <Search\r\n                query={query}\r\n                handleQuery={handleQuery}\r\n            />\r\n            <Form\r\n                persons={persons}\r\n                setPersons={setPersons}\r\n                displayNotification={displayNotification}\r\n            />\r\n            <PersonList\r\n                filteredPersons={filteredPersons}\r\n                handleDelete={handleDelete}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}